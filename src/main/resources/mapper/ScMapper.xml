<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.classroomschool.Dao.ScMapper" >
  <resultMap id="BaseResultMap" type="com.example.classroomschool.Model.Sc" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="student" property="student" jdbcType="INTEGER" />
    <result column="course" property="course" jdbcType="INTEGER" />
    <result column="pigeonhole" property="pigeonhole" jdbcType="VARCHAR" />
    <result column="top" property="top" jdbcType="VARCHAR" />
    <result column="display_num" property="displayNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, student, course, pigeonhole, top, display_num
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.classroomschool.Model.ScExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sc
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sc
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectSc" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from sc
    where student = #{student,jdbcType=INTEGER} and course = #{course,jdbcType=INTEGER}
  </select>
  <select id="ListStudent" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from sc
    where student = #{student,jdbcType=INTEGER}
  </select>
  <select id="selectAllSc" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from sc
    where course = #{course,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sc
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="CourseDelete" parameterType="map" >
    delete from sc
    where student = #{student,jdbcType=INTEGER} and course = #{course,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByCourse" parameterType="java.lang.Integer" >
    delete from sc
    where course = #{course,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByExample" parameterType="com.example.classroomschool.Model.ScExample" >
    delete from sc
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <update id="ChangeTop" parameterType="map" >
    update
    sc
    set
    top = #{top,jdbcType=VARCHAR}
    where student = #{id,jdbcType=INTEGER} and course = #{CourseId,jdbcType=INTEGER}
  </update>

  <update id="pigeonholeC" parameterType="map" >
    update
    sc
    set
    pigeonhole = #{pigeonhole,jdbcType=VARCHAR}
    where student = #{student,jdbcType=INTEGER} and course = #{course,jdbcType=INTEGER}
  </update>
  <update id="pigeonholeTheCourse" parameterType="map" >
    update
    sc
    set
    pigeonhole = #{pigeonhole,jdbcType=VARCHAR}
    where  course = #{course,jdbcType=INTEGER}
  </update>

  <update id="SortNumber" parameterType="map" >
    update
    sc
    set
     display_num = #{displayNum,jdbcType=INTEGER}
    where course = #{course,jdbcType=INTEGER} and student = #{student,jdbcType=INTEGER}
  </update>

  <insert id="insert" parameterType="com.example.classroomschool.Model.Sc" >
    insert into sc (id, student, course,
      pigeonhole, top, display_num
      )
    values (#{id,jdbcType=INTEGER}, #{student,jdbcType=INTEGER}, #{course,jdbcType=INTEGER},
      #{pigeonhole,jdbcType=VARCHAR}, #{top,jdbcType=VARCHAR}, #{displayNum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.classroomschool.Model.Sc" >
    insert into sc
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="student != null" >
        student,
      </if>
      <if test="course != null" >
        course,
      </if>
      <if test="pigeonhole != null" >
        pigeonhole,
      </if>
      <if test="top != null" >
        top,
      </if>
      <if test="displayNum != null" >
        display_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="student != null" >
        #{student,jdbcType=INTEGER},
      </if>
      <if test="course != null" >
        #{course,jdbcType=INTEGER},
      </if>
      <if test="pigeonhole != null" >
        #{pigeonhole,jdbcType=VARCHAR},
      </if>
      <if test="top != null" >
        #{top,jdbcType=VARCHAR},
      </if>
      <if test="displayNum != null" >
        #{displayNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.classroomschool.Model.ScExample" resultType="java.lang.Integer" >
    select count(*) from sc
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sc
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.student != null" >
        student = #{record.student,jdbcType=INTEGER},
      </if>
      <if test="record.course != null" >
        course = #{record.course,jdbcType=INTEGER},
      </if>
      <if test="record.pigeonhole != null" >
        pigeonhole = #{record.pigeonhole,jdbcType=VARCHAR},
      </if>
      <if test="record.top != null" >
        top = #{record.top,jdbcType=VARCHAR},
      </if>
      <if test="record.displayNum != null" >
        display_num = #{record.displayNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sc
    set id = #{record.id,jdbcType=INTEGER},
      student = #{record.student,jdbcType=INTEGER},
      course = #{record.course,jdbcType=INTEGER},
      pigeonhole = #{record.pigeonhole,jdbcType=VARCHAR},
      top = #{record.top,jdbcType=VARCHAR},
      display_num = #{record.displayNum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.classroomschool.Model.Sc" >
    update sc
    <set >
      <if test="student != null" >
        student = #{student,jdbcType=INTEGER},
      </if>
      <if test="course != null" >
        course = #{course,jdbcType=INTEGER},
      </if>
      <if test="pigeonhole != null" >
        pigeonhole = #{pigeonhole,jdbcType=VARCHAR},
      </if>
      <if test="top != null" >
        top = #{top,jdbcType=VARCHAR},
      </if>
      <if test="displayNum != null" >
        display_num = #{displayNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.classroomschool.Model.Sc" >
    update sc
    set student = #{student,jdbcType=INTEGER},
      course = #{course,jdbcType=INTEGER},
      pigeonhole = #{pigeonhole,jdbcType=VARCHAR},
      top = #{top,jdbcType=VARCHAR},
      display_num = #{displayNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>