<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.classroomschool.Dao.SwMapper" >
  <resultMap id="BaseResultMap" type="com.example.classroomschool.Model.Sw" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="student" property="student" jdbcType="INTEGER" />
    <result column="homework" property="homework" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="VARCHAR" />
    <result column="file" property="file" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="review" property="review" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, student, homework, status, answer, time, file, score, review
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.classroomschool.Model.SwExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sw
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sw
    where id = #{id,jdbcType=INTEGER}
  </select>


  <select id="selectHomework" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from sw
    where student = #{student,jdbcType=INTEGER} and homework = #{homework,jdbcType=INTEGER}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sw
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByHomeworkId" parameterType="java.lang.Integer" >
    delete from sw
    where homework = #{homeworkId,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByExample" parameterType="com.example.classroomschool.Model.SwExample" >
    delete from sw
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.classroomschool.Model.Sw" >
    insert into sw (id, student, homework, 
      status, answer, time, 
      file, score, review
      )
    values (#{id,jdbcType=INTEGER}, #{student,jdbcType=INTEGER}, #{homework,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}, 
      #{file,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}, #{review,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.classroomschool.Model.Sw" >
    insert into sw
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="student != null" >
        student,
      </if>
      <if test="homework != null" >
        homework,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="file != null" >
        file,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="review != null" >
        review,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="student != null" >
        #{student,jdbcType=INTEGER},
      </if>
      <if test="homework != null" >
        #{homework,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="file != null" >
        #{file,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="review != null" >
        #{review,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.classroomschool.Model.SwExample" resultType="java.lang.Integer" >
    select count(*) from sw
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sw
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.student != null" >
        student = #{record.student,jdbcType=INTEGER},
      </if>
      <if test="record.homework != null" >
        homework = #{record.homework,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.answer != null" >
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.file != null" >
        file = #{record.file,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.review != null" >
        review = #{record.review,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sw
    set id = #{record.id,jdbcType=INTEGER},
      student = #{record.student,jdbcType=INTEGER},
      homework = #{record.homework,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      answer = #{record.answer,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=VARCHAR},
      file = #{record.file,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      review = #{record.review,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.classroomschool.Model.Sw" >
    update sw
    <set >
      <if test="student != null" >
        student = #{student,jdbcType=INTEGER},
      </if>
      <if test="homework != null" >
        homework = #{homework,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="file != null" >
        file = #{file,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="review != null" >
        review = #{review,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.classroomschool.Model.Sw" >
    update sw
    set student = #{student,jdbcType=INTEGER},
      homework = #{homework,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      file = #{file,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      review = #{review,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateRead" parameterType="map" >
    update sw
    set
      review = #{review,jdbcType=VARCHAR}
    where student = #{student,jdbcType=INTEGER} and homework = #{homeworkId,jdbcType=INTEGER}
  </update>
  <update id="updateScore" parameterType="map" >
    update sw
    set
      review = #{review,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER}
    where student = #{student,jdbcType=INTEGER} and homework = #{homeworkId,jdbcType=INTEGER}
  </update>
</mapper>